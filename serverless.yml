org: vimalmenon
app: api-krishivmenon
service: api-km
frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-iam-roles-per-function
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 5000

useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  apiGateway:
    binaryMediaTypes:
      - 'application/pdf'
      - 'image/*'
  environment:
    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
    DYNAMO_DB_Table: ${env:DYNAMO_DB_TABLE}
    DB_KEY: ${env:DB_KEY}

functions:
  # drive Apis
  getFilesFromS3:
    handler: services/drive/handler.getFilesFromS3
    events:
      - http:
          path: /drive/{folder}
          method: get
          cors: true
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - s3:ListObject
          - dynamodb:Query
        Resource: "*"
  uploadToS3:
    handler: services/drive/handler.uploadToS3
    events:
      - http:
          path: /drive/{folder}/{file}
          method: post
          cors: true
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - s3:PutObject
          - dynamodb:PutItem
        Resource: "*"
  updateS3File:
    handler: services/drive/handler.updateS3File
    events:
      - http:
          path: /drive/{folder}/{file}
          method: put
          cors: true
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - s3:ListObject
        Resource: "*"
  deleteFromS3:
    handler: services/drive/handler.deleteFromS3
    events:
      - http:
          path: /drive/{folder}/{file}
          method: delete
          cors: true
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - s3:DeleteObject
          - dynamodb:DeleteItem
        Resource: "*"
  # folders api

  # notes api
  getNotes:
    handler: services/notes/handler.getNotes
    events:
      - http:
          path: /notes
          method: get
          cors: true
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:Query
        Resource: "*"
  getNote:
    handler: services/notes/handler.getNote
    events:
      - http:
          path: /notes/{id}
          method: get
          cors: true
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:GetItem
        Resource: "*"
  addNote:
    handler: services/notes/handler.addNote
    events:
      - http:
          path: /notes
          method: post
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: "*"


